/////////////////
// Semantic.gs // for SCSS: http://sass-lang.com/
/////////////////

// Defaults which you can freely override
$column-width: 60;
$gutter-width: 10;
$columns: 12;

*{color:#888;}

//$nCol: 12;


$LCol: 12;
$MCol: 6;
$SCol: 2;


@function calcCol($span, $nCol) {
	//@return percentage( ( (1/$nCol)*$span - ( $gutter-width * 2) ) );
	@return percentage( (1/$nCol)*$span );
}


@mixin posL($span, $margin:0, $offset:0) {
		
	width:calcCol( $span, $LCol);
	
	padding:0 ($gutter-width/2 + px);
	margin-left: calcCol( $margin, $LCol);
	position:relative;
	left:$offset;

}


@mixin posM($span, $margin:0, $offset:0) {
		
	width:calcCol( $span, $MCol);
	
	padding:($gutter-width/2);
	margin-left: calcCol( $margin, $MCol);
	position:relative;
	left:$offset;

}






// Utility function â€” you should never need to modify this
@function gridsystem-width($columns:$columns) {
	@return ($column-width * $columns) + ($gutter-width * $columns);
}

// Set $total-width to 100% for a fluid layout
$total-width: gridsystem-width($columns);

// Uncomment these two lines and the star-hack width/margin lines below to enable sub-pixel fix for IE6 & 7. See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// $min-width: 999999;
// $correction: 0.5 / $min-width * 100;



//////////
// GRID //
//////////

body {
	width: 100%;
	@include clearfix();
}

@mixin row($columns:$columns) {
	display: block;
	width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns));
	margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1);
	// *width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns))-$correction;
	// *margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1)-$correction;
	@include clearfix();
}
@mixin column($x,$columns:$columns) {
	display: inline;
	float: left;
	width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));
	margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns));
	// *width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns))-$correction;
	// *margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns))-$correction;
}
@mixin push($offset:1) {
	margin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}
@mixin pull($offset:1) {
	margin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}





/*

DA USARE :
 

@column-width: 60;
@gutter-width: 20;
@columns: 12;

header { .column(12); }
article { .column(9); }
aside { .column(3); }

@media (max-device-width: 960px) {
   article { .column(12); }
   aside { .column(12); }
}

 */